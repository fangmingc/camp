<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Camp</title>
    <link>http://tech.xiachufang.xyz/camp/</link>
    <description>Recent content on Camp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://tech.xiachufang.xyz/camp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Http Static Server</title>
      <link>http://tech.xiachufang.xyz/camp/posts/http-static-server/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://tech.xiachufang.xyz/camp/posts/http-static-server/</guid>
      <description>只使用标准库，用 socket 完成 HTTP 静态文件服务器，实现如下功能：
  下载文件
 文件不存在的时候报 404
  文件存在直接返回文件内容
  支持 Range 下载功能 （加分）
     上传文件
 可以指定文件保存的路径
  指定路径存在文件的时候报错
       CWD 目录结构如下
 . ├── a.txt └── dir └── b.txt     执行
curl http://localhost:8080/a.txt   返回 a.txt 的文件内容
   执行
curl http://localhost:8080/dir/b.txt   返回 dir/b.txt 的文件内容</description>
    </item>
    
    <item>
      <title>Http Parser</title>
      <link>http://tech.xiachufang.xyz/camp/posts/http-parser/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://tech.xiachufang.xyz/camp/posts/http-parser/</guid>
      <description>最终成果 输入举例
 GET / HTTP/1.1 HOST: baidu.com   POST / HTTP/1.1 Host: foo.com Content-Type: application/x-www-form-urlencoded Content-Length: 13 say=Hi&amp;amp;to=Mom   POST /test.html HTTP/1.1 Host: example.org Content-Type: multipart/form-data;boundary=&#34;boundary&#34; --boundary Content-Disposition: form-data; name=&#34;field1&#34; value1 --boundary Content-Disposition: form-data; name=&#34;field2&#34;; filename=&#34;example.txt&#34; value2   要求实现如下函数，并写单元测试。
 struct Header { Name string, Value string } struct Request { Method string, Path string, Version string, Headers []Header, Body []byte, } struct Response { Version string, Code uint, Headers []Header, Body []byte, } func parse_request(content string) *Request { } func write_reqponse(resp *Response) []byte { }       Content-Type: multipart/form-data;boundary=&#34;</description>
    </item>
    
  </channel>
</rss>